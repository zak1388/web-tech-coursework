@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&family=Ubuntu+Mono&display=swap');

/* global variables, including title sizes and colors */
:root {
    --title-font-size: 2em;

    --page-background-color: #FEB59A;
    --page-text-color: black;

    --header-background-color: #5941A9;
    --header-text-color: white;

    --nav-background-color: #94377C;
    --nav-link-color: lightgray;
    --nav-text-color: white;

    --main-background-color: #DE85BC;
    --main-text-color: black;

    --aside-background-color: #DA5874;
    --aside-text-color: black;

    --footer-background-color: #360A14;
    --footer-text-color: white;
}

/* set all the fonts to be google's roboto or if unavailable than any sans-serif font */
* {
    font-family: "Roboto", sans-serif;
}

/* set h1, h2, and h3 font sizes and families */
h1 {
    font-size: var(--title-font-size);
    font-family: "Ubuntu Mono", monospace;
}

h2 {
    font-family: "Ubuntu Mono", monospace;
    font-size: calc(var(--title-font-size) * 0.75);
}

h3 {
    font-family: "Ubuntu Mono", monospace;
    font-size: calc(var(--title-font-size) * 0.66);
}

/* set some of the defaults for all the pages, such as the default grid styling for the body */
body {
    display: grid;
    grid-template-areas:
        "header header header nav nav"
        "main main main main main"
        "footer footer footer footer footer";
    width: auto;
    min-height: 100vh;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: max-content auto max-content;

    background-color: var(--page-background-color);
    color: var(--page-text-color);
}

/* then the default header styling */
header {
    grid-area: header;

    padding: 1em;
    margin-left: 1em;

    background-color: var(--header-background-color);
    color: var(--header-text-color);
}

/* before the headers children were all too close to the left side, this makes the spacing much better */
header > * {
    margin-left: 1rem;
}

/* set the nav styling, and make sure its not too close to the right */
nav {
    grid-area: nav;

    margin-right: 1em;

    text-align: center;

    background-color: var(--nav-background-color);
    color: var(--nav-text-color);
}

/* anchor tags have their own colours, so we change this in the header */
nav a, nav a:visited {
    color: var(--nav-text-color);
}

/* fun new hover colour */
nav a:hover {
    color: var(--nav-link-color);
}

/* set the nav ul to be a flex element with no list styling, it also has width and height 100% so that everything can be nice and centered */
nav > ul {
    list-style: none;

    display: flex;
    flex-wrap: wrap;

    width: 100%;
    height: 100%;
}

/* allow the list elments in the nav to grow, this lets them space themselves much nicer, and then center them and give them some space with margin */
nav > ul > li {
    flex-grow: 1;
    align-self: center;
    margin: 0.25em 2em;
}

/* define the main element's styling, mainly just color and a bit of margin */ 
main {
    grid-area: main;
    margin: 0 1em;
    background-color: var(--main-background-color);
    color: var(--main-text-color);
}

main form {
    max-width: 40em;
    margin: 1em auto;

    background-color: var(--aside-background-color);
    color: var(--aside-text-color);
}

/* define the footer styling */
footer {
    grid-area: footer;

    padding: 1em;
    margin: 0 1em;

    background-color: var(--footer-background-color);
    color: var(--footer-text-color);
}

/* styling for list elements now they have been reset */
li {
    margin: 0 0 0 1em;
}

/* stylign for divs, sectiosn, and articles, because they need a little space */
section, div, article {
    margin: 1em;
}

/* set the aside colours */
aside {
    background-color: var(--aside-background-color);
    color: var(--aside-text-color);
}

/* couple classes to have a bit of reusability */
.center-text {
    text-align: center;
}

.flex {
    display: flex;
}

.grow {
    flex-grow: 1;
}

/* imgs should be too big, unless theyre explicitly allowed to be elsewhere */
img {
    max-height: 400px;
}
